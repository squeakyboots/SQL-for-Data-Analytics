--
-- PostgreSQL database dump
--

-- Dumped from database version 12.7
-- Dumped by pg_dump version 12.7

-- Started on 2022-10-30 20:43:18

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 205 (class 1255 OID 17086)
-- Name: get_stock(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_stock(text) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE stock_val integer;
BEGIN
    SELECT stock INTO stock_val FROM products WHERE product_code=$1;
RETURN stock_val;
END; $_$;


ALTER FUNCTION public.get_stock(text) OWNER TO postgres;

--
-- TOC entry 206 (class 1255 OID 17088)
-- Name: insert_order(integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_order(integer, text, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
   new_order_id integer;
BEGIN
    SELECT MAX(order_id) INTO new_order_id FROM order_info;
    new_order_id := new_order_id + 1;
    INSERT INTO order_info (order_id, customer_id, product_code, qty) VALUES
        (new_order_id, $1, $2, $3);
RETURN new_order_id;
END; $_$;


ALTER FUNCTION public.insert_order(integer, text, integer) OWNER TO postgres;

--
-- TOC entry 207 (class 1255 OID 17089)
-- Name: update_stock(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_stock() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    stock_qty integer;
BEGIN
    stock_qty := get_stock(NEW.product_code) - NEW.qty;
    UPDATE products SET stock = stock_qty WHERE product_code=NEW.product_code;
RETURN NEW;
END; $$;


ALTER FUNCTION public.update_stock() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 202 (class 1259 OID 17068)
-- Name: customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customers (
    customer_id integer,
    first_name text,
    last_name text,
    address text
);


ALTER TABLE public.customers OWNER TO postgres;

--
-- TOC entry 203 (class 1259 OID 17074)
-- Name: order_info; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.order_info (
    order_id integer,
    customer_id integer,
    product_code text,
    qty integer
);


ALTER TABLE public.order_info OWNER TO postgres;

--
-- TOC entry 204 (class 1259 OID 17080)
-- Name: products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products (
    product_code text,
    name text,
    stock integer
);


ALTER TABLE public.products OWNER TO postgres;

--
-- TOC entry 2826 (class 0 OID 17068)
-- Dependencies: 202
-- Data for Name: customers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customers (customer_id, first_name, last_name, address) FROM stdin;
4	Guybrush	Threepwood	Melee Island
5	Murray	TheSkull	Plunder island
1	Meat	Hook	Melee Island
2	Captain	Blondebeard	Puerto Pollo
3	Griswold	Goodsoup	Blood Island
\.


--
-- TOC entry 2827 (class 0 OID 17074)
-- Dependencies: 203
-- Data for Name: order_info; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.order_info (order_id, customer_id, product_code, qty) FROM stdin;
1618	3	GROG1	12
1619	2	POULET3	3
1620	4	MON123	1
1621	4	MON636	3
1622	5	MON666	1
1623	4	MON636	10
1624	4	MON123	2
\.


--
-- TOC entry 2828 (class 0 OID 17080)
-- Dependencies: 204
-- Data for Name: products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.products (product_code, name, stock) FROM stdin;
MON666	Murray"s Arm	0
GROG1	Grog	65
POULET3	El Pollo Diablo	2
MON636	Red Herring	89
MON123	Rubber Chicken + Pulley	5
\.


--
-- TOC entry 2699 (class 2620 OID 17090)
-- Name: order_info update_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_trigger AFTER INSERT ON public.order_info FOR EACH ROW EXECUTE FUNCTION public.update_stock();


-- Completed on 2022-10-30 20:43:18

--
-- PostgreSQL database dump complete
--

